{"ast":null,"code":"var _jsxFileName = \"/Users/howardtam/Documents/react/09-forms/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const validateEmail = email => {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email.value)) {\n      return true;\n    }\n    return false;\n  };\n  const enteredEmailIsValid = validateEmail(enteredEmail);\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n    //re-rendered on every keystroke\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n    //re-rendered on every keystroke\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName);\n\n    //nameInputRef.current.value = \"\"; => Not ideal, dont manipulate dom. useRef is not friendly in terms of resetting a value,\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"nLPwRBBCARNBsLUgNqKrhA7EIUU=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","nameInputIsInvalid","validateEmail","email","test","value","enteredEmailIsValid","emailInputIsInvalid","formIsValid","nameInputChangeHandler","event","target","nameInputBlurHandler","emailInputChangeHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses"],"sources":["/Users/howardtam/Documents/react/09-forms/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const validateEmail = (email) => {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email.value)) {\n      return true;\n    }\n    return false;\n  };\n\n  const enteredEmailIsValid = validateEmail(enteredEmail);\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n    //re-rendered on every keystroke\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n    //re-rendered on every keystroke\n  };\n\n  const emailInputBlurHandler = (event) => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n\n    //nameInputRef.current.value = \"\"; => Not ideal, dont manipulate dom. useRef is not friendly in terms of resetting a value,\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">Name must not be empty</p>\n        )}\n      </div>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Email</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInvalid && (\n          <p className=\"error-text\">Please enter a valid email!</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}