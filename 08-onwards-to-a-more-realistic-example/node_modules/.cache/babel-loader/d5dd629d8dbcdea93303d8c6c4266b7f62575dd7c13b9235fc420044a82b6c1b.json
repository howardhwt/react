{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nconst useHTTP = (requestConfig, applyData) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      applyData(data);\n\n      //   const loadedTasks = [];\n\n      //   for (const taskKey in data) {\n      //     loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n      //   }\n\n      //   setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, [requestConfig]);\n  return {\n    isLoading,\n    error,\n    sendRequest\n    //the below 3 are the same\n    // isLoading: isLoading,\n    // error: error,\n    // sendRequest: sendRequest,\n  };\n};\n_s(useHTTP, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\nexport default useHTTP;","map":{"version":3,"names":["useState","useCallback","useHTTP","requestConfig","applyData","isLoading","setIsLoading","error","setError","sendRequest","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["/Users/howardtam/Documents/react/08-onwards-to-a-more-realistic-example/src/components/hooks/use-http.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\nconst useHTTP = (requestConfig, applyData) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      applyData(data);\n\n      //   const loadedTasks = [];\n\n      //   for (const taskKey in data) {\n      //     loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n      //   }\n\n      //   setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, [requestConfig]);\n\n  return {\n    isLoading,\n    error,\n    sendRequest,\n    //the below 3 are the same\n    // isLoading: isLoading,\n    // error: error,\n    // sendRequest: sendRequest,\n  };\n};\n\nexport default useHTTP;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAG,CAACC,aAAa,EAAEC,SAAS,KAAK;EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMS,WAAW,GAAGR,WAAW,CAAC,YAAY;IAC1CK,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACR,aAAa,CAACS,GAAG,EAAE;QAC9CC,MAAM,EAAEV,aAAa,CAACU,MAAM,GAAGV,aAAa,CAACU,MAAM,GAAG,KAAK;QAC3DC,OAAO,EAAEX,aAAa,CAACW,OAAO,GAAGX,aAAa,CAACW,OAAO,GAAG,CAAC,CAAC;QAC3DC,IAAI,EAAEZ,aAAa,CAACY,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACd,aAAa,CAACY,IAAI,CAAC,GAAG;MAClE,CAAC,CAAC;MAEF,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,EAAE;MAClCjB,SAAS,CAACgB,IAAI,CAAC;;MAEf;;MAEA;MACA;MACA;;MAEA;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZd,QAAQ,CAACc,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAjB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,CAACH,aAAa,CAAC,CAAC;EAEnB,OAAO;IACLE,SAAS;IACTE,KAAK;IACLE;IACA;IACA;IACA;IACA;EACF,CAAC;AACH,CAAC;AAAC,GA3CIP,OAAO;AA6Cb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}